메모리 구조
1. Shared Buffer
   1) 조회/변경에 필요한 데이터 블록을 보관하는 메모리 영역
   2) 크기는 기본값 기준 128MB (필요에 따라 조절 가능)
   3) 거의 모든 SQL은 수행 시 데이터를 Shared Buffer에 Fetch한 다음 조회/변경해야 함.
   * Dirty Buffer : Shared Buffer에서 변경된 데이터는 한동안 디스크에 있을 때와는 다른 데이터를 
                    지니게 되는데, 이렇게 디스크와 메모리에 있는 데이터가 서로 다른 상태를 더티(Dirty)하다고 하며
                    이런 상태의 버퍼를 Dirty Buffer라고 한다.
                    Dirty Buffer는 주기적으로 디스크와 동기화시켜주어야 하는데 이를 체크포인트(checkpoint)라고 한다.
                    체크포인트가 끝난 Dirty Buffer는 변경내용이 이미 디스크에 있으므로 다른 DB세션에 의해 재사용될 수 있는데
                    이 상태를 Free하다고 한다.

2. WAL Buffer
   1) WAL(Write Ahead Log)란, Insert/Update/Delete/Alter 등의 DB데이터/구조변경을 실행하기 전에
      변경이력을 기록한 로그를 말한다. WAL로그가 가장 먼저 적재되는 메모리영역이 WAL Buffer이다.

3. CLog
   1) 커밋 로그. 트랜잭션 커밋 정보를 보관

4. Work Mem
   1) 백엔드 프로세스에서 사용하는 Sorting, Hashing시의 작업영역

5. Maintenance_Work_Mem
   1) Vacuum, rebuild index, analyze 등 유지보수에 사용되는 메모리 영역

6. Temp Buffer
   1) 대용량 소팅, 해시테이블 생성 시 사용되는 임시영역 (temp_buffers)

프로세스
1. postmaster
   1) PostgreSQL 시작 시 가장 먼저 기동되는 프로세스
   2) 클라이언트의 요청을 먼저 받아 사용자 인증, IP유효여부 체크하고
      인증 완료 후 백엔드 프로세스를 생성하여 연결시켜줌.
      사용자, IP체크에 pg_hba.conf 설정파일을 사용한다.

2. 백엔드 프로세스
   1) 클라이언트의 요청 처리를 전담하는 프로세스.
      클라이언트 1개 당 1개의 백엔드 프로세스

3. Wal Writer
   1) WAL Buffer에 있는 로그들을 디스크에 flush하는 역할을 담당하는 프로세스.

4. Writer 
   Shared Buffer에 있는 Dirty Buffer들을 디스크에 내려쓰는 역할.

5. checkpoint
   Writer에 신호를 보내서 Shared Buffer에 있는 Dirty Buffer를 디스크로 내리게 함
   발생주기
   1) pg_start_backup 수행 또는 pg_basebackup 백업 시
   2) DB를 정상종료할 때.
   3) checkpoint 명령 실행시
   4) 아무 이벤트가 없어도 5초마다 한 번 (기본값)

6. archiver
   archive_mode=on 설정 시 기동하는 선택적 프로세스
   pg_wal에 있는 wal파일을 archive 위치로 백업하는 프로세스
   이렇게 백업받은 wal파일은 추후 복구를 위해 별도 보관이 필요함.

7. stats collector
   DB동작에 관한 통계정보를 자동 수집해주는 프로세스

8. Autovacuum Launcher
   Vacuum (테이블 조각모음) + analyze (테이블 통계정보 수집)을 수행하는 프로세스

9. Log Collector
   에러로그 기록
      
