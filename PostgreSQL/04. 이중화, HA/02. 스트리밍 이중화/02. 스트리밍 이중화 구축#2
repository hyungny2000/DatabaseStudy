PostgreSQL 스트리밍 이중화 구축#2

네트워크 생성
docker network create --subnet 172.20.0.0/16 mybridge

Streaming 이중화
docker run -d -it --name postsr01 --hostname postsr01 --net mybridge --ip 172.20.0.110 --privileged oraclelinux:8 /sbin/init
docker run -d -it --name postsr02 --hostname postsr02 --net mybridge --ip 172.20.0.111 --privileged oraclelinux:8 /sbin/init

도커 컨테이너 접속
docker exec -it postsr01 /bin/bash
docker exec -it postsr02 /bin/bash

postgres 설치
# Install the repository RPM:
dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-aarch64/pgdg-redhat-repo-latest.noarch.rpm

# Disable the built-in PostgreSQL module:
dnf -qy module disable postgresql

# Install PostgreSQL:
dnf install -y postgresql12-server

# postgres 계정 환경변수 설정
su - postgres
vi .bash_profile

export PGHOME=/usr/pgsql-12
export PATH=$PATH:$PGHOME/bin

:wq

. .bash_profile


#  postsr01(마스터) 계정만 DB초기화

initdb

cd $PGDATA
vi postgresql.conf
listen_addresses = '*'
wal_level = replica
hot_standby = on
wal_log_hints = on

:wq

pg_ctl start

# 이중화 계정 생성
create user repuser with replication encrypted password 'repuser';

# pg_hba.conf에 아래 추가
host      replication      repuser     172.20.0.1/16     md5
:wq

pg_hba.conf 설정 리로드
pg_ctl reload

# postsr01(마스터)에 물리적 이중화 슬롯 생성
SELECT * FROM pg_create_physical_replication_slot('repl_slot_01');
-- 이 시점부터 pg_wal의 wal file은 스탠바이DB와의 이중화 구축, 구동되서 동기화 완료되는 순간까지 DB데이터 변경사항에 대한 wal file을 계속 적재할 것
-- archive_command 구동해도 삭제가 안됨.
-- 최대한 빨리 스탠바이DB를 구성해야 한다.

# postsr02(스탠바이)의 pg_basebackup 을 이용하여 복사해오기 (이중화 슬롯에 대한 정보는 없음)
[postgres@postsr02 ~]$ pg_basebackup -D $PGDATA -h 172.20.0.110 -U repuser -p 5432 -P -Fp -Xs
Password:
24640/24640 kB (100%), 1/1 tablespace[postgres@postsr02 data]$ ls -rlth
total 128K
drwx------ 3 postgres postgres 4.0K Feb  3 12:55 pg_wal
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_serial
drwx------ 4 postgres postgres 4.0K Feb  3 12:55 pg_multixact
-rw------- 1 postgres postgres  224 Feb  3 12:55 backup_label
drwx------ 5 postgres postgres 4.0K Feb  3 12:55 base
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_xact
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_twophase
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_stat
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_snapshots
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_notify
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_commit_ts
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 log
-rw------- 1 postgres postgres   30 Feb  3 12:55 current_logfiles
-rw------- 1 postgres postgres  27K Feb  3 12:55 postgresql.conf
-rw------- 1 postgres postgres   88 Feb  3 12:55 postgresql.auto.conf
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_tblspc
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_subtrans
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_stat_tmp
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_replslot
drwx------ 4 postgres postgres 4.0K Feb  3 12:55 pg_logical
-rw------- 1 postgres postgres 1.6K Feb  3 12:55 pg_ident.conf
-rw------- 1 postgres postgres 4.8K Feb  3 12:55 pg_hba.conf
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 pg_dynshmem
drwx------ 2 postgres postgres 4.0K Feb  3 12:55 global
-rw------- 1 postgres postgres    3 Feb  3 12:55 PG_VERSION

standby.signal 파일 생성
touch standby.signal

마스터DB정보, 이중화슬롯명 기재
primary_conninfo = 'user=repuser password=repuser host=172.20.0.110 port=5432'            
primary_slot_name = 'repl_slot_01'           
-- standby_mode = on은 12버전 미만에서 쓰던 것으로 보임. 12버전부터는 standby.signal이 대신함

스탠바이DB 기동
[postgres@postsr02 data]$ pg_ctl start
waiting for server to start....2025-02-03 12:59:19.335 UTC [930] LOG:  starting PostgreSQL 12.22 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22), 64-bit
2025-02-03 12:59:19.335 UTC [930] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2025-02-03 12:59:19.335 UTC [930] LOG:  listening on IPv6 address "::", port 5432
2025-02-03 12:59:19.337 UTC [930] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2025-02-03 12:59:19.340 UTC [930] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2025-02-03 12:59:19.348 UTC [930] LOG:  redirecting log output to logging collector process
2025-02-03 12:59:19.348 UTC [930] HINT:  Future log output will appear in directory "log".
 done
server started
[postgres@postsr02 data]$
postgres=# select pg_is_in_recovery();
 pg_is_in_recovery
-------------------
 t
(1 row)
-- t : 스탠바이DB임을 의미함

postgres=#


스탠바이DB 로그 보기
2025-02-03 12:44:09.388 UTC [637] LOG:  database system was shut down at 2025-02-03 12:42:54 UTC
2025-02-03 12:44:09.392 UTC [635] LOG:  database system is ready to accept connections
2025-02-03 12:48:34.346 UTC [635] LOG:  received fast shutdown request
2025-02-03 12:48:34.349 UTC [635] LOG:  aborting any active transactions
2025-02-03 12:48:34.350 UTC [635] LOG:  background worker "logical replication launcher" (PID 643) exited with exit code 1
2025-02-03 12:48:34.350 UTC [638] LOG:  shutting down
2025-02-03 12:48:34.363 UTC [635] LOG:  database system is shut down
2025-02-03 12:48:34.474 UTC [716] LOG:  database system was shut down at 2025-02-03 12:48:34 UTC
2025-02-03 12:48:34.481 UTC [714] LOG:  database system is ready to accept connections
2025-02-03 12:52:35.913 UTC [714] LOG:  received SIGHUP, reloading configuration files
2025-02-03 12:59:19.350 UTC [932] LOG:  database system was interrupted; last known up at 2025-02-03 12:55:17 UTC
2025-02-03 12:59:19.517 UTC [932] LOG:  entering standby mode
2025-02-03 12:59:19.521 UTC [932] LOG:  redo starts at 0/2000028
2025-02-03 12:59:19.522 UTC [932] LOG:  consistent recovery state reached at 0/2000100
2025-02-03 12:59:19.522 UTC [930] LOG:  database system is ready to accept read only connections -- readonly 연결만 수신 가능함.
2025-02-03 12:59:19.528 UTC [936] LOG:  started streaming WAL from primary at 0/3000000 on timeline 1


마스터DB 이중화 정보 보기
postgres=# \x
Expanded display is on.
postgres=# select * from pg_stat_replication;
-[ RECORD 1 ]----+------------------------------
pid              | 982
usesysid         | 16384
usename          | repuser
application_name | walreceiver
client_addr      | 172.20.0.111
client_hostname  |
client_port      | 50082
backend_start    | 2025-02-03 12:59:19.526446+00
backend_xmin     |
state            | streaming
sent_lsn         | 0/3000148
write_lsn        | 0/3000148
flush_lsn        | 0/3000148
replay_lsn       | 0/3000148
write_lag        |
flush_lag        |
replay_lag       |
sync_priority    | 0
sync_state       | async
reply_time       | 2025-02-03 13:02:05.3576+00
postgres=#


